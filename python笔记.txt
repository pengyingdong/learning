print()  打印
input()  控制台输入
type()   类型(可以查看数据的类型)
+-*/     运算符(+可以拼接字符串  /用于运算得到的结果都是float(小数))
**,%,//  特殊运算符(**指数运算2**3就是2的3次方，%取余5%2得到结果是余数不是商，//整数除法5//2是2.5去除余数只保留商)        
int()    整数（不带小数点的整数）
float()  小数（带小数点的数）
str()    字符串（有序的字符序列，""单引号或双引号引起来的）
bool()   布尔值(用于逻辑运算只有true和false)
list()   列表（有序序列，用中括号）
dict()   字典（无序的键值对，用大括号{"key":"value"}）
tuple()  元组（有序且不可变，用小括号a=X，X，X），也可以不用括
set()    集合(无序且无重复的元素，用大括号{"A","B","C"})
len()    获取字符串长度print(len(变量名))
find()   查找子字符串print(变量名.find("查找的内容"))
count()  子字符串出现的次数print(变量.count("X"))
a=123    a是变量名123是内容   变量名只能包含字母，数字，下划线，不能以数字开头区分大小写，名字尽量有意义比如苹果价格变量名取apple_price

类型转换：birth=input("请输入出生年份")控制台输入的都是字符串
         age=2018-int(birth)
        print("你今年已经"+str(age)+"岁啦!")(把age转换成字符串才能和其他字符串拼接)
字符串下标：(a(变量名="hello")) print(a[0]) hello 从h=0，e=1,l=2,l=3,o=4  用负数从后往前数o=-1,l=-2以此类推，截取字符串a[1:3]取的就是el，a[1:]取得就是ello，a[:3]取得就是hel a[::2]步长从第0个开始每隔一个取一个a[::3]每隔两个取一个  a[0:4:2]从0开始每隔一个取一个取到4不包括4！     

字符串方法
in 例子：hello in 变量名  变量名中有没有hello 结果只有true或false

not in  用法于in一样结果也只有true或false

replace()  例子：变量名.replace("1","2") 把变量名中的所有1替换成2

XX.encode("UTF-8")  把XX转换成utf-8的编码格式

转义字符
\"  

\'

\n 换行  newline

\t 制表符 tab

\\  \

格式化字符串
f-string""将变量内容转换为字符串
例子 : 
       name ="浩宇🐕"
       jier =8
       result =f"恭喜你{name}，终于长到{jier}cm!"
       print(result)

格式化数字
例子： (填充（可以填充XXX），对齐（^剧中<左对齐>右对齐），符号(-负，+正)，宽度（数字），精度（.2精确后两位小数），类型f浮点数%是百分数#（2b，8o，16x）进制)
     pi =3.1415926
     result =f"圆周率{pi:@^-50.2f}后只保留两位小数"
     print(result)
关系运算
>大于,<小于,>=大于等于,<=小于等于,==相等,!=不相等
例子：
print("abc">"a") 结果只有true或false
1.2.3.....9<A-Z<a-z<hello

逻辑运算
优先级从高到低
**
*，/，%，//
+，-
>,<,>=,<=,==,!=
and(且，必须两个为true结果为true)   or（或，有一个为true结果为true）   not（非，为true结果是false，为false结果是true）
=
例子： 
  result=1+2**3>=12-4/2 and "Apple">="Car"
  print(result)

if和else
例子： 
number =input("请输入一个整数：")
number=int(number)
if number %2 ==0:
    print(f"你输入的数是{number},他是个偶数。") 
    if number%3==0:
        print(f"这个数还能被3整除")
else:
    print(f"你输入的数是{number},他是个奇数")


print("END")


elif
例子： 
number=input("请输入您的考试分数0-100:")
if number:
    number=int(number)
    if 0<=number<=100:
        if number==100:
            print(f"您的成绩为是{number}分，评级为S")
        elif number>=90:
            print(f"您的成绩为{number}分，评级为A")
        elif number>=80:
            print(f"您的成绩为{number}分，评级为B")        
        elif number>=70:
            print(f"您的成绩为{number}分，评级为C")
        elif number>=60:
            print(f"您的成绩为{number}分，评级为D")
        elif number>=0:
            print(f"您的成绩为{number}分，评级为E")
    else:
        print("分数有误")
else:
    print("您没有输入内容")

    生成随机数
    import random
    a=random.randint(1,5)在1到5中随机生成一个整数

    列表和下标
    a=[1,2,5,"hello",3.14]
    a[0] = 10
    print(a)
    列表是可变的把变量里第0个下标的值替换成10

    列表简单使用
    a=[1,2,3,4,5]
    if 5 in a:
        print ("a里面包含这个元素")
    else：
        print ("a里面不包含这个元素")
    
    a= [1,2,3]        a= [1,2,3]
    b= len(a)       print(len(a) - 1)
    print(b)             表示a这个列表里最后一个下标的长度
    a列表里的长度

    a=[1,2,3] 
    b=["a","b","c"]
    c= a + b
    print(c)
    表示将两个列表组合到一起

    a=[1,2,3]
    b=a * 3   
    print(b)
    表示将a重复三次

    a=[1,2,3]                             a=[1,2,3]
    b=a[::-1]                             a.reverse()
    print(b)                              print(f"{a}")
    表示将a表内元素倒过来a=[3,2,1]           表示将a表内元素倒过来
    a 不变  变的是b                          a表内容变化

    a=[1,2,3]  里面只能全部是数值或者字符串才能比较 字符和数值不能比较
    b=max(a)                     b=min(a)
    print(b)                     print(b)
    表示显示出列表内最大的数字      表示显示出列表内最小的数字

    a=[1,2,3]    里面只能全部是数值或者字符串才能排序 字符和数值不能排序
    a.sort()
    print (a)   表示将a表排序

    方法: a.sort()                   函数: len(a)
    sort()                          len()
    reverse()                       min()  max()

    修改查找元素:对列表修改或查找（增删改查）
    a=[1,2,3,4,5]                            a=[1,2,3,4,5]  
    a[1]=12                                  a[1]  
    print(a)                                 print(a[1])
    表示将a列表内下标为1的元素修改为12    表示查看a列表下标为1的值     

    a=[1,2,3,4,5] 
    print(a.index(X)) 表示查看a表内x的下标是几    index查看元素下标
    print(a.count(X)) 表示 查看a表内x出现了几次   count查看元素出现次数

    a = ["周一"，"周二","周三","周四","周五","周六","周日")
    a[1],a[2] = a[2],a[1]        1,2,3=a,b,c  表示将1，2，3替换成a,b,c
    print(a)
    表示将a表内下标为1，2的元素互换位置

    split()字符串的裁剪
    a = ["周一，周二,周三,周四,周五,周六,周日)
    b = a.split(",")
    print(b)   表示将一个字符串转成一个列表

    join()将列表里的内容拼接成一个字符串
    b = "".join(a)
    print(b)    表示将列表内的元素拼接成一个字符串  ""内输入*可以作为分隔符
    
    增加元素
    a= [1,2,3]
    a.append(4)
    print(a)
    append() 表示在列表末尾增加一个元素(只能加一个)

    a= [1,2,3]
    a.insert(1(1是下标),X(元素))
    print(a)
    insert() 表示在某个下标位置加上一个元素

    a= [1,2,3]
    a.extend("hi")
    print(a)
    extend()表示在列表末尾增加多个元素,如果加入字符串是会拆开单个字母用[]括起来就会将整体加入

    删除元素
    a= [1,2,3]
    a.pop(0)
    print(a)
    pop() 表示删除第0个下标的元素，如果括号内未空是删除最后一位元素

    a= [1,2,3]
    del a[1]
    print(a)
    del 表示删除指定下标的元素

    a= [1,2,3]
    a.remove(2)
    print(a)
    remove() 表示删除指定的元素，只能删除一个，有多个相同元素只删除第一个

    a= [1,2,3]
    a.clear()
    print(a)
    clear()  表示清空列表

    元组（和列表一样唯一的区别是里面的元素不可变）
    s = 1, 2, 3
    a,b,c = s 
    表示将元组内的元素赋值给a,b,c 

    列表嵌套

    q = [1,2,3]
    w = ["a", "b", "c"]
    e = ["hi", "my", "what"]
    l = [q,w,e]
    f = l [0][1]
    print(f)
    表示f表内下标为0的列表内下标为1的元素

    range方法
    a = list(range(100))
    print(a )
    表示列表内生成0-99的元素 可以用int，str，tuple 等  也可以填写4-20 或者截取步长

    列表遍历

    a = [1, 2, 3, 4]
    for b in a:
        print(b)
        表示单独显示列表里的内容

    for循环
     for a in range(10):
        print("hello,world")   
        表示重复打印9次hello，world ，range()可以用来控制循环次数

    while循环
    i = 0
    while i < 10:
        print("浩宇狗")
        i +=1
        while后跟循环结束的条件，和for循环的区别是不知道循环多少次可以用循环结束的条件结束循环
    break 循环结束   continue跳过本次循环执行下一轮循环 可以用if判断

    列表推导式
    a = list(range(100))
    b=[ i for i in a if i % 7==0 or  (i % 10 ==7 or i // 10 ==7 )]
    print(b)
    循环的简便用法
    a = [i.upper() for i in "hello"]
    print(a)
    前面的i是表达式可以将元素转换成字符串等 upper()将i转换成大写

    循环嵌套
    for i in range(3):
        for j in range(3):
            print(f"i={i},j={j}")
            
    字典基础
    d = {"北京": 22 ,"上海": 24}

    查 print(d[内容填查找的key])  
    a = d.get("广州",-1)  表示查询字典内的key为广州的value 如果字典内不存在该key 将-1赋值给a
    a = d.setdefault("广州",-1)  表示查询字典内的key为广州的value 如果字典内不存在该key 将新增该key

    改 d["北京"] = 20   表示将key为"北京"的value 改为20 

    增 d["广州"] = 23 表示将"广州":23 加入字典  
    d.update({"广州": 23})   表示可以用update加入多个键值对用,隔开

    删 d.pop("北京")  删除指定的key   d.clear() 删除字典内的全部元素

    len(d) 表示获取字典的长度

    str(d) 表示将字典内的元素转换为字符串

    "广州" in d      "广州" not in d

字典遍历（字典里的value可以是字符串，列表，字典等）
d = {"小王": "stu1","小红": "stu2","小明": "stu2"}
for i in d:
    print(i) 表示遍历d字典里所有key
for i in d.keys()       a = list(d.keys()) list转换的type
表示遍历d字典里所有key
for i in d.values()     a = list(d.values()) list转换的type
表示遍历d字典里所有的value
for k,v in d.items()    a = list(d.items()) list转换的type
表示遍历d字典里所有key和value

stu1 = {"name":"小王","chinese": 86,"math": 92}
stu2 = {"name":"小红","chinese": 96,"math": 99}
stu3 = {"name":"小明","chinese": 72,"math": 84}
a = {"小王": stu1,"小红": stu2,"小明": stu2}
b = a ["小王"]
print(b)
字典不能用下标定位 只能用key定位 key中的value是列表可以用下标定位

python函数

函数调用
函数（function）是具有特定功能的代码段
函数调用：是用一个简单的命令，执行一系列复杂的操作

         参数是调用函数时给函数提供的数据
函数调用：函数名是函数的标识符
         返回值是函数执行完毕后的结果

定义函数
def line():
    print("hello","world")
    表示定义一个函数 下次可以使用函数名()来调用这个函数

line()
表示调用上面定义的函数，函数调用时会依次运行函数体内的代码

函数参数
可以在调用函数时，使用参数向函数体内传递数据
可以定义多个参数，中间用逗号隔开
def number(a,b):
    print(a*b)
number(2,2)
表示定义一个number方法需要传a和b两个参数，调用时需要填两个参数

函数返回值

def get_max(a,b):
    v = a
    if b > a:
        v = b
    return v   return后面的代码不执行
i = get_max(5, 8)
print(i)
可以返回多个值  多个值使用多个变量

变量作用域
全局变量:可以在函数中使用不能在函数内直接修改，可以使用global 加变量名下面进行修改
局部变量:只能在函数内使用或修改
参数变量:定义方法内的参数变量可以在方法内其他的方法中使用，用nonlocal来声明

参数扩展
def f(a=0,b=0,c=0):
    print(a,b,c)
f(b=8)
a和c打印出默认值，给b赋值8
定义函数内的参数是形式参数，赋值参数是实际参数

可变参数
def f(*args):                           def f(*args，a):
    print(args)                             print(args)
f(1,"a",2,3)                            f(1,"a",2,a = 3)
在定义函数内的参数填写*args表示在调用时可以传任意个数的参数，args后的参数传值需要用关键词比如 a = 3 打印出的args是个元组

可变关键词参数
def f(*args，**kwargs):
    print(args)
    print(kwargs)
f(1,"a",2,a = 3，b = 5)
表示也是可以传任意个数的参数必须放在最后一位，要用键值对的方式传参

